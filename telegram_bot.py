import requests
import telebot
import random
from telebot import types
from bs4 import BeautifulSoup as BS  # –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü
import sqlite3  # –∏–º–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
import config  # –∏–º–ø–æ—Ä—Ç config.py

bot = telebot.TeleBot(config.token)  # –ø–µ—Ä–µ–¥–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ config.py

# —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
URL = 'https://horoscopes.rambler.ru/'
URL_weather = 'https://weather.rambler.ru/v-'
URL_films = 'https://www.kinoafisha.info/rating/movies/'
URL_tv ='https://tv.belta.by/program-ru/channel/'


# –†–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π /start
@bot.message_handler(commands=['start'])
def start(message):
    # –°–æ–∑–¥–∞–¥–∏–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    conn = sqlite3.connect('users.db')
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç cursor, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    cursor = conn.cursor()
    # –°–æ–∑–¥–∞–¥–∏–º —Ç–∞–±–ª–∏—Ü—É 'personal_id', –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–ø–æ–ª–µ id)
    cursor.execute('''CREATE TABLE IF NOT EXISTS personal_id(id INTEGER)''')
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    conn.commit()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ id –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤ –ë–î
    people_id = message.chat.id
    cursor.execute(f'''SELECT id FROM personal_id WHERE id = {people_id}''')
    # –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ id –µ—â–µ –Ω–µ—Ç, —Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è data –±—É–¥–µ—Ç —Ä–∞–≤–Ω–∞ 0
    data = cursor.fetchall()
    # –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ id –Ω–µ—Ç—É, —Ç–æ –æ–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –≤ –ë–î
    if data is None:
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É
        user_id = [message.chat.id]
        cursor.execute('''INSERT INTO personal_id VALUES(?)''', user_id)
        conn.commit()
    else:
        pass


    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–ª–∞–≤–∏—Ç–∞—É—Ä—ã
    markup = types.InlineKeyboardMarkup(row_width=1)  # –ö–æ–ª–∏—á–µ—Å—Ç–∫–æ –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ = 1
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–ª–∞–≤–∏—Ç—É—Ä—ã
    button_1 = types.InlineKeyboardButton('‚ú®–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='function_1')
    button_2 = types.InlineKeyboardButton('üå•–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='function_2')
    button_3 = types.InlineKeyboardButton('üé¨–§–∏–ª—å–º—ã –ø–æ –∂–∞–Ω—Ä–∞–º', callback_data='function_3')
    button_4 = types.InlineKeyboardButton('ü¶ã–ß—Ç–æ —Å–µ–π—á–∞—Å –Ω–∞ —Ç–≤', callback_data='function_4')
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏—Ç—É—Ä—É
    markup.add(button_1, button_2, button_3, button_4)

    # –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç–∏–∫. –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)



# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞
@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.message:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≥–æ—Ä–æ—Å–∫–æ–ø–∞
        if call.data == 'function_1':  # –ï—Å–ª–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ 1, —Ç–æ...p
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            markup_horoscope = types.InlineKeyboardMarkup(row_width=1)
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            button_aries = types.InlineKeyboardButton('‚ôà –û–≤–µ–Ω ‚ôà', callback_data='aries')
            markup_horoscope.add(button_aries)
            button_taurus = types.InlineKeyboardButton('‚ôâ –¢–µ–ª–µ—Ü ‚ôâ', callback_data='taurus')
            markup_horoscope.add(button_taurus)
            button_gemini = types.InlineKeyboardButton('‚ôä –ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôä', callback_data='gemini')
            markup_horoscope.add(button_gemini)
            button_cancer = types.InlineKeyboardButton('‚ôã –†–∞–∫ ‚ôã', callback_data='cancer')
            markup_horoscope.add(button_cancer)
            button_leo = types.InlineKeyboardButton('‚ôå –õ–µ–≤ ‚ôå', callback_data='leo')
            markup_horoscope.add(button_leo)
            button_virgo = types.InlineKeyboardButton('‚ôç –î–µ–≤–∞ ‚ôç', callback_data='virgo')
            markup_horoscope.add(button_virgo)
            button_libra = types.InlineKeyboardButton('‚ôé –í–µ—Å—ã ‚ôé', callback_data='libra')
            markup_horoscope.add(button_libra)
            button_scorpio = types.InlineKeyboardButton('‚ôè –°–∫–æ—Ä–ø–∏–æ–Ω ‚ôè', callback_data='scorpio')
            markup_horoscope.add(button_scorpio)
            button_saggitarius = types.InlineKeyboardButton('‚ôê –°—Ç—Ä–µ–ª–µ—Ü ‚ôê', callback_data='sagittarius')
            markup_horoscope.add(button_saggitarius)
            button_capricorn = types.InlineKeyboardButton('‚ôë –ö–æ–∑–µ—Ä–æ–≥ ‚ôë', callback_data='capricorn')
            markup_horoscope.add(button_capricorn)
            button_aquarius = types.InlineKeyboardButton('‚ôí –í–æ–¥–æ–ª–µ–π ‚ôí', callback_data='aquarius')
            markup_horoscope.add(button_aquarius)
            button_pisces = types.InlineKeyboardButton('‚ôì –†—ã–±—ã ‚ôì', callback_data='pisces')
            markup_horoscope.add(button_pisces)
            # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –ø–æ–º–æ—â—å—é reply_markup
            bot.send_message(call.message.chat.id, '–ö–∞–∫–æ–π —É —Ç–µ–±—è –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞?', reply_markup=markup_horoscope)

        # –ó–∞–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –≥–æ—Ä–æ—Å–∫–æ–ø–∞
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–û–≤–µ–Ω'
        if call.data == 'aries':
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ —Å—Å—ã–ª–∫–µ URL –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
            url_aries = requests.get(URL + 'aries/')
            # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
            soup = BS(url_aries.text, 'html.parser')
            # –ò—â–µ–º –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É —Ç–µ–≥—É –∏ –∫–ª–∞—Å—Å—É
            horoscope_aries = soup.find_all('p', class_='mtZOt')
            # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —É–±–∏—Ä–∞–µ—Ç –æ—Ç—Ç—É–¥–∞ —Ç–µ–≥–∏, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            list_aries = [i.text for i in horoscope_aries]
            print(list_aries)
            bot.send_message(call.message.chat.id, list_aries)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤ –Ω–∞—á–∞–ª–æ
            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–¢–µ–ª–µ—Ü'
        elif call.data == 'taurus':
            url_taurus = requests.get(URL + 'taurus/')
            soup = BS(url_taurus.text, 'html.parser')
            horoscope_taurus = soup.find_all('p', class_='mtZOt')
            list_taurus = [i.text for i in horoscope_taurus]
            print(list_taurus)
            bot.send_message(call.message.chat.id, list_taurus)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ë–ª–∏–∑–Ω–µ—Ü—ã'
        elif call.data == 'gemini':
            url_gemini = requests.get(URL + 'gemini/')
            soup = BS(url_gemini.text, 'html.parser')
            horoscope_gemini = soup.find_all('p', class_='mtZOt')
            list_gemini = [i.text for i in horoscope_gemini]
            print(list_gemini)
            bot.send_message(call.message.chat.id, list_gemini)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–†–∞–∫'
        elif call.data == 'cancer':
            url_cancer = requests.get(URL + 'cancer/')
            soup = BS(url_cancer.text, 'html.parser')
            horoscope_cancer = soup.find_all('p', class_='mtZOt')
            list_cancer = [i.text for i in horoscope_cancer]
            print(list_cancer)
            bot.send_message(call.message.chat.id, list_cancer)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)




        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–õ–µ–≤'
        elif call.data == 'leo':
            url_leo = requests.get(URL + 'leo/')
            soup = BS(url_leo.text, 'html.parser')
            horoscope_leo = soup.find_all('p', class_='mtZOt')
            list_leo = [i.text for i in horoscope_leo]
            print(list_leo)
            bot.send_message(call.message.chat.id, list_leo)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–í–µ—Å—ã'
        elif call.data == 'libra':
            url_libra = requests.get(URL + 'libra/')
            soup = BS(url_libra.text, 'html.parser')
            horoscope_libra = soup.find_all('p', class_='mtZOt')
            list_libra = [i.text for i in horoscope_libra]
            print(list_libra)
            bot.send_message(call.message.chat.id, list_libra)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–°–∫–æ—Ä–ø–∏–æ–Ω'
        elif call.data == 'scorpio':
            url_scorpio = requests.get(URL + 'scorpio/')
            soup = BS(url_scorpio.text, 'html.parser')
            horoscope_scorpio = soup.find_all('p', class_='mtZOt')
            list_scorpio = [i.text for i in horoscope_scorpio]
            print(list_scorpio)
            bot.send_message(call.message.chat.id, list_scorpio)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)




        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–°—Ç—Ä–µ–ª–µ—Ü'
        elif call.data == 'sagittarius':
            url_sagittarius = requests.get(URL + 'sagittarius/')
            soup = BS(url_sagittarius.text, 'html.parser')
            horoscope_sagittarius = soup.find_all('p', class_='mtZOt')
            list_sagittarius = [i.text for i in horoscope_sagittarius]
            print(list_sagittarius)
            bot.send_message(call.message.chat.id, list_sagittarius)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ö–æ–∑–µ—Ä–æ–≥'
        elif call.data == 'capricorn':
            url_capricorn = requests.get(URL + 'capricorn/')
            soup = BS(url_capricorn.text, 'html.parser')
            horoscope_capricorn = soup.find_all('p', class_='mtZOt')
            list_capricorn = [i.text for i in horoscope_capricorn]
            print(list_capricorn)
            bot.send_message(call.message.chat.id, list_capricorn)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–í–æ–¥–æ–ª–µ–π'
        elif call.data == 'aquarius':
            url_aquarius = requests.get(URL + 'aquarius/')
            soup = BS(url_aquarius.text, 'html.parser')
            horoscope_aquarius = soup.find_all('p', class_='mtZOt')
            list_aquarius = [i.text for i in horoscope_aquarius]
            print(list_aquarius)
            bot.send_message(call.message.chat.id, list_aquarius)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)




        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–†—ã–±—ã'
        elif call.data == 'pisces':
            url_pisces = requests.get(URL + 'pisces/')
            soup = BS(url_pisces.text, 'html.parser')
            horoscope_pisces = soup.find_all('p', class_='mtZOt')
            list_pisces = [i.text for i in horoscope_pisces]
            print(list_pisces)
            bot.send_message(call.message.chat.id, list_pisces)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'
        if call.data == 'function_2':
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            markup_weather = types.InlineKeyboardMarkup(row_width=1)
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            button_grodno = types.InlineKeyboardButton('–ì—Ä–æ–¥–Ω–æ üåø', callback_data='grodno')
            markup_weather.add(button_grodno)
            button_brest = types.InlineKeyboardButton('–ë—Ä–µ—Å—Ç üå±', callback_data='brest')
            markup_weather.add(button_brest)
            button_minsk = types.InlineKeyboardButton('–ú–∏–Ω—Å–∫ üåæ', callback_data='minsk')
            markup_weather.add(button_minsk)
            button_vitebsk = types.InlineKeyboardButton('–í–∏—Ç–µ–±—Å–∫ üçÉ', callback_data='vitebsk')
            markup_weather.add(button_vitebsk)
            button_mogilev = types.InlineKeyboardButton('–ú–æ–≥–∏–ª–µ–≤ ‚òò', callback_data='mogilev')
            markup_weather.add(button_mogilev)
            button_gomel = types.InlineKeyboardButton('–ì–æ–º–µ–ª—å üçÇ', callback_data='gomel')
            markup_weather.add(button_gomel)

            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥', reply_markup=markup_weather)



        # –ó–∞–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø–æ–≥–æ–¥—ã
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ì—Ä–æ–¥–Ω–æ'
        if call.data == 'grodno':
            url_grodno = requests.get(URL_weather + 'grodno/today/')
            soup = BS(url_grodno.text, 'html.parser')
            weather_grodno = soup.find_all('p', class_='_3xiF')
            list_grodno = [i.text for i in weather_grodno]
            print(list_grodno)
            bot.send_message(call.message.chat.id, list_grodno)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ë—Ä–µ—Å—Ç'
        elif call.data == 'brest':
            url_brest = requests.get(URL_weather + 'breste/today/')
            soup = BS(url_brest.text, 'html.parser')
            weather_brest = soup.find_all('p', class_='_3xiF')
            list_brest = [i.text for i in weather_brest]
            print(list_brest)
            bot.send_message(call.message.chat.id, list_brest)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ú–∏–Ω—Å–∫'
        elif call.data == 'minsk':
            url_minsk = requests.get(URL_weather + 'minske/today/')
            soup = BS(url_minsk.text, 'html.parser')
            weather_minsk = soup.find_all('p', class_='_3xiF')
            list_minsk = [i.text for i in weather_minsk]
            print(list_minsk)
            bot.send_message(call.message.chat.id, list_minsk)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–í–∏—Ç–µ–±—Å–∫'
        elif call.data == 'vitebsk':
            url_vitebsk = requests.get(URL_weather + 'vitebske/today/')
            soup = BS(url_vitebsk.text, 'html.parser')
            weather_vitebsk = soup.find_all('p', class_='_3xiF')
            list_vitebsk = [i.text for i in weather_vitebsk]
            print(list_vitebsk)
            bot.send_message(call.message.chat.id, list_vitebsk)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ú–æ–≥–∏–ª–µ–≤'
        elif call.data == 'mogilev':
            url_mogilev = requests.get(URL_weather + 'mogilyove/today/')
            soup = BS(url_mogilev.text, 'html.parser')
            weather_mogilev = soup.find_all('p', class_='_3xiF')
            list_mogilev = [i.text for i in weather_mogilev]
            print(list_mogilev)
            bot.send_message(call.message.chat.id, list_mogilev)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ì–æ–º–µ–ª—å'
        elif call.data == 'gomel':
            url_gomel = requests.get(URL_weather + 'gomele/today/')
            soup = BS(url_gomel.text, 'html.parser')
            weather_gomel = soup.find_all('p', class_='_3xiF')
            list_gomel = [i.text for i in weather_gomel]
            print(list_gomel)
            bot.send_message(call.message.chat.id, list_gomel)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–§–∏–ª—å–º—ã –ø–æ –∂–∞–Ω—Ä–∞–º'
        if call.data == 'function_3':
            markup_films = types.InlineKeyboardMarkup(row_width=1)
            button_anime = types.InlineKeyboardButton('üìå –ê–Ω–∏–º–µ', callback_data='anime')
            markup_films.add(button_anime)
            button_action = types.InlineKeyboardButton('üìå –ë–æ–µ–≤–∏–∫–∏', callback_data='action')
            markup_films.add(button_action)
            button_mystery = types.InlineKeyboardButton('üìå –î–µ—Ç–µ–∫—Ç–∏–≤—ã', callback_data='mystery')
            markup_films.add(button_mystery)
            button_drama = types.InlineKeyboardButton('üìå –î—Ä–∞–º–∞', callback_data='drama')
            markup_films.add(button_drama)
            button_comedy = types.InlineKeyboardButton('üìå –ö–æ–º–µ–¥–∏—è', callback_data='comedy')
            markup_films.add(button_comedy)
            button_romance = types.InlineKeyboardButton('üìå –ú–µ–ª–æ–¥—Ä–∞–º–∞', callback_data='romance')
            markup_films.add(button_romance)
            button_animation = types.InlineKeyboardButton('üìå –ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã', callback_data='animation')
            markup_films.add(button_animation)
            button_adventure = types.InlineKeyboardButton('üìå –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', callback_data='adventure')
            markup_films.add(button_adventure)
            button_family = types.InlineKeyboardButton('üìå –°–µ–º–µ–π–Ω—ã–µ', callback_data='family')
            markup_films.add(button_family)
            button_thriller = types.InlineKeyboardButton('üìå –¢—Ä–∏–ª–ª–µ—Ä—ã', callback_data='thriller')
            markup_films.add(button_thriller)
            button_horror = types.InlineKeyboardButton('üìå –£–∂–∞—Å—ã', callback_data='horror')
            markup_films.add(button_horror)
            button_fantasy = types.InlineKeyboardButton('üìå –§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', callback_data='fantasy')
            markup_films.add(button_fantasy)

            bot.send_message(call.message.chat.id, 'üìΩ –ö–∞–∫–æ–π –∂–∞–Ω—Ä –∫–∏–Ω–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=markup_films)



        # –ó–∞–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å–º–æ–≤
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ê–Ω–∏–º–µ'
        if call.data == 'anime':
            url_anime = requests.get(URL_films + 'anime/')
            soup = BS(url_anime.text, 'html.parser')
            anime_films = soup.find_all('a', class_='movieItem_title')
            # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤
            random.shuffle(anime_films)
            # –°–æ–∑–¥–∞–µ–º —Ü–∏–∫–ª for, —á—Ç–æ–±—ã –ø–µ—Ä–µ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º—ã –∏ –ø–æ –∏—Ç–æ–≥—É –≤—ã–≤–µ—Å—Ç–∏ –Ω–µ –≤—Å–µ, –∞ —Ç–æ–ª—å–∫–æ 10
            for film in anime_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if anime_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ë–æ–µ–≤–∏–∫'
        elif call.data == 'action':
            url_action = requests.get(URL_films + 'action/')
            soup = BS(url_action.text, 'html.parser')
            action_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(action_films)
            for film in action_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if action_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–î–µ—Ç–µ–∫—Ç–∏–≤—ã'
        elif call.data == 'mystery':
            url_mystery = requests.get(URL_films + 'mystery/')
            soup = BS(url_mystery.text, 'html.parser')
            mystery_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(mystery_films)
            for film in mystery_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if mystery_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–î—Ä–∞–º–∞'
        elif call.data == 'drama':
            url_drama = requests.get(URL_films + 'drama/')
            soup = BS(url_drama.text, 'html.parser')
            drama_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(drama_films)
            for film in drama_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if drama_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ö–æ–º–µ–¥–∏–∏'
        elif call.data == 'comedy':
            url_comedy = requests.get(URL_films + 'comedy/')
            soup = BS(url_comedy.text, 'html.parser')
            comedy_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(comedy_films)
            for film in comedy_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if comedy_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ú–µ–ª–æ–¥—Ä–∞–º–∞'
        elif call.data == 'romance':
            url_romance = requests.get(URL_films + 'romance/')
            soup = BS(url_romance.text, 'html.parser')
            romance_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(romance_films)
            for film in romance_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if romance_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã'
        elif call.data == 'animation':
            url_animation = requests.get(URL_films + 'animation/')
            soup = BS(url_animation.text, 'html.parser')
            animation_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(animation_films)
            for film in animation_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if animation_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è'
        elif call.data == 'adventure':
            url_adventure = requests.get(URL_films + 'adventure/')
            soup = BS(url_adventure.text, 'html.parser')
            adventure_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(adventure_films)
            for film in adventure_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if adventure_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–°–µ–º–µ–π–Ω—ã–µ'
        elif call.data == 'family':
            url_family = requests.get(URL_films + 'family/')
            soup = BS(url_family.text, 'html.parser')
            family_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(family_films)
            for film in family_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if family_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–¢—Ä–∏–ª–ª–µ—Ä'
        elif call.data == 'thriller':
            url_thriller = requests.get(URL_films + 'thriller/')
            soup = BS(url_thriller.text, 'html.parser')
            thriller_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(thriller_films)
            for film in thriller_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if thriller_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–£–∂–∞—Å—ã'
        elif call.data == 'horror':
            url_horror = requests.get(URL_films + 'horror/')
            soup = BS(url_horror.text, 'html.parser')
            horror_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(horror_films)
            for film in horror_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if horror_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞'
        elif call.data == 'fantasy':
            url_fantasy = requests.get(URL_films + 'fantasy/')
            soup = BS(url_fantasy.text, 'html.parser')
            fantasy_films = soup.find_all('a', class_='movieItem_title')
            random.shuffle(fantasy_films)
            for film in fantasy_films:
                print(film.text)
                bot.send_message(call.message.chat.id, film.text)
                if fantasy_films.index(film) == 9:
                    break

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º –Ω–∞ –¢–í
        if call.data == 'function_4':
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            markup_tv = types.InlineKeyboardMarkup(row_width=1)
            # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            button_belarus1 = types.InlineKeyboardButton('–ë–µ–ª–∞—Ä—É—Å—å 1', callback_data='belarus_1')
            markup_tv.add(button_belarus1)
            button_belarus_2 = types.InlineKeyboardButton('–ë–µ–ª–∞—Ä—É—Å—å 2', callback_data='belarus_2')
            markup_tv.add(button_belarus_2)
            button_belarus_5 = types.InlineKeyboardButton('–í–¢–í', callback_data='vtv')
            markup_tv.add(button_belarus_5)
            button_tv3 = types.InlineKeyboardButton('–¢–í3 - –ú–ò–ù–°–ö', callback_data='tv3')
            markup_tv.add(button_tv3)
            button_animal_planet = types.InlineKeyboardButton('ANIMAL PLANET EUROPE', callback_data='animal_planet')
            markup_tv.add(button_animal_planet)
            button_tv1000 = types.InlineKeyboardButton('TV1000', callback_data='tv1000')
            markup_tv.add(button_tv1000)
            button_viasat_history = types.InlineKeyboardButton('VIASAT HISTORY', callback_data='viasat_history')
            markup_tv.add(button_viasat_history)
            button_children = types.InlineKeyboardButton('–î–ï–¢–°–ö–ò–ô –ú–ò–†', callback_data='children')
            markup_tv.add(button_children)
            button_nickelodeon = types.InlineKeyboardButton('NICKELODEON', callback_data='nickelodeon')
            markup_tv.add(button_nickelodeon)

            bot.send_message(call.message.chat.id, "–ü—Ä–æ –∫–∞–∫–æ–π –∫–∞–Ω–∞–ª —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?", reply_markup=markup_tv)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ë–µ–ª–∞—Ä—É—Å—å 1'
        if call.data == 'belarus_1':
            url_tv = requests.get(URL_tv + '140/')
            soup = BS(url_tv.text, 'html.parser')
            time_belarus_1 = soup.find_all('div', class_='tv_chanel_date')
            pr_belarus1 = soup.find_all('div', class_='tv_chanel_title')
            list_belarus1 = [i.text for i in pr_belarus1]  # –ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏
            list_time = [i.text for i in time_belarus_1]  # –í—Ä–µ–º—è –ø–µ—Ä–µ–¥–∞—á–∏
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_belarus1)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ë–µ–ª–∞—Ä—É—Å—å 2'
        elif call.data == 'belarus_2':
            url_tv = requests.get(URL_tv + '86/')
            soup = BS(url_tv.text, 'html.parser')
            time_belarus_2 = soup.find_all('div', class_='tv_chanel_date')
            pr_belarus2 = soup.find_all('div', class_='tv_chanel_title')
            list_belarus2 = [i.text for i in pr_belarus2]
            list_time = [i.text for i in time_belarus_2]
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_belarus2)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–í–¢–í'
        elif call.data == 'vtv':
            url_tv = requests.get(URL_tv + '95/')
            soup = BS(url_tv.text, 'html.parser')
            time_vtv = soup.find_all('div', class_='tv_chanel_date')
            pr_vtv = soup.find_all('div', class_='tv_chanel_title')
            list_vtv = [i.text for i in pr_vtv]
            list_time = [i.text for i in time_vtv]
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_vtv)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–¢–í3 –ú–ò–ù–°–ö'
        elif call.data == 'tv3':
            url_tv = requests.get(URL_tv + '45/')
            soup = BS(url_tv.text, 'html.parser')
            time_tv3 = soup.find_all('div', class_='tv_chanel_date')
            pr_tv3 = soup.find_all('div', class_='tv_chanel_title')
            list_tv3 = [i.text for i in pr_tv3]
            list_time = [i.text for i in time_tv3]
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_tv3)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ 'animal_planet'
        elif call.data == 'animal_planet':
            url_tv = requests.get(URL_tv + '19/')
            soup = BS(url_tv.text, 'html.parser')
            time_ap = soup.find_all('div', class_='tv_chanel_date')
            pr_ap = soup.find_all('div', class_='tv_chanel_title')
            list_ap = [i.text for i in pr_ap]
            list_time = [i.text for i in time_ap]
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_ap)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ 'tv1000'
        elif call.data == 'tv1000':
            url_tv = requests.get(URL_tv + '103/')
            soup = BS(url_tv.text, 'html.parser')
            time_tv1000 = soup.find_all('div', class_='tv_chanel_date')
            pr_tv1000 = soup.find_all('div', class_='tv_chanel_title')
            list_tv1000 = [i.text for i in pr_tv1000]
            list_time = [i.text for i in time_tv1000]
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_tv1000)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ 'viasat_history'
        elif call.data == 'viasat_history':
            url_tv = requests.get(URL_tv + '106/')
            soup = BS(url_tv.text, 'html.parser')
            time_vh = soup.find_all('div', class_='tv_chanel_date')
            pr_vh = soup.find_all('div', class_='tv_chanel_title')
            list_vh = [i.text for i in pr_vh]
            list_time = [i.text for i in time_vh]
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_vh)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–î–µ—Ç—Å–∫–∏–π –º–∏—Ä'
        elif call.data == 'children':
            url_tv = requests.get(URL_tv + '130/')
            soup = BS(url_tv.text, 'html.parser')
            time_children = soup.find_all('div', class_='tv_chanel_date')
            pr_children = soup.find_all('div', class_='tv_chanel_title')
            list_children = [i.text for i in pr_children]
            list_time = [i.text for i in time_children]
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_children)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)



        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ 'nickelodeon'
        elif call.data == 'nickelodeon':
            url_tv = requests.get(URL_tv + '74/')
            soup = BS(url_tv.text, 'html.parser')
            time_nickelodeon = soup.find_all('div', class_='tv_chanel_date')
            pr_nickelodeon = soup.find_all('div', class_='tv_chanel_title')
            list_nickelodeon = [i.text for i in pr_nickelodeon]
            list_time = [i.text for i in time_nickelodeon]
            bot.send_message(call.message.chat.id, list_time)
            bot.send_message(call.message.chat.id, list_nickelodeon)

            markup_back = types.InlineKeyboardMarkup(row_width=1)
            button_back = types.InlineKeyboardButton('‚û° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ ‚¨Ö', callback_data='function_back')
            markup_back.add(button_back)
            bot.send_message(call.message.chat.id, "üìç–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æüìç", reply_markup=markup_back)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'
        if call.data == 'function_back':
            markup = types.InlineKeyboardMarkup(row_width=1)  # –ö–æ–ª–∏—á–µ—Å—Ç–∫–æ –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ = 1
            button_1 = types.InlineKeyboardButton('‚ú®–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='function_1')
            button_2 = types.InlineKeyboardButton('üå•–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='function_2')
            button_3 = types.InlineKeyboardButton('üé¨–§–∏–ª—å–º—ã –ø–æ –∂–∞–Ω—Ä–∞–º', callback_data='function_3')
            button_4 = types.InlineKeyboardButton('ü¶ã–ß—Ç–æ —Å–µ–π—á–∞—Å –Ω–∞ —Ç–≤', callback_data='function_4')
            markup.add(button_1, button_2, button_3, button_4)

            bot.send_message(call.message.chat.id, "–•–æ—Ç–∏—Ç–µ –µ—â–µ —á—Ç–æ-–Ω–∏–±—É–¥—å —É–∑–Ω–∞—Ç—å?", reply_markup=markup)


# –†–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π /delete
# –£–¥–∞–ª—è–µ—Ç id –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@bot.message_handler(commands=['delete'])
def delete(message):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()

    people_id = message.chat.id
    cursor.execute(f'''DELETE FROM personal_id WHERE id = {people_id}''')
    conn.commit()


# –†–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ /help
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, "–í—ã–ø–æ–ª–Ω–∏ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")


# –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω—è–∏–º–∏
@bot.message_handler(content_types=['text'])
def bla_bla_bla(message):
    bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –æ–¥–∞—Ä–∏–ª –º–µ–Ω—è –Ω–∞–≤—ã–∫–∞–º–∏ "
                                      "–æ–±—â–µ–Ω–∏—è, –Ω–æ –¥—É–º–∞—é, —á—Ç–æ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
                                      " —Å —Ç–æ–±–æ–π –ø–æ–±–æ–ª—Ç–∞–µ–º üôÉ")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
if __name__ == '__main__':
    try:
        bot.polling(none_stop=True)
    except ConnectionError as c:
        print('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è', c)
    except Exception as e:
        print('–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞', e)
    finally:
        print('–ó–¥–µ—Å—å –≤—Å–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å')